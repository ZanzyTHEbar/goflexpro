// TODO: Setup github actions to run tests, format, and build the project
// TODO: Run format only on dev branch and pr to main branch

name: Worker Builder
on:
  workflow_dispatch:
  push:
    tags:
      - "v*"
    branches:
      - main

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
permissions:
  contents: write

jobs:
  semver:
    runs-on: ubuntu-latest
    name: SemVer
    steps:
      - name: Checkout repository
          uses: actions/checkout@v3
          with:
            token: ${{ env.GITHUB_TOKEN }}
      - name: Create Directory
        run: mkdir -p dist
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: production-files
          path: ./dist
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm install -g conventional-changelog-conventionalcommits
      - run: npm install -g semantic-release@v19.0.5
      - run: npm install -g @semantic-release/exec
      - run: npm install -g @semantic-release/git
      - run: npm install -g @semantic-release/release-notes-generator
      - run: npm install -g @semantic-release/changelog
      - run: npm install -g @semantic-release/github
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          sudo apt-get install -y jq
          chmod +x ./.github/scripts/prepareCMD.sh 
          semantic-release

    build:
        needs: [semver]
        strategy:
          fail-fast: false
          matrix:
            node-version: [18.x]
            platform: [ubuntu-latest]
        runs-on: ${{ matrix.platform }}
        steps:
          - name: Checkout repository
            uses: actions/checkout@v3
            with:
              token: ${{ env.GITHUB_TOKEN }}

          - name: Node.js setup ${{ matrix.node-version }}
            uses: actions/setup-node@v3
            with:
              node-version: ${{ matrix.node-version }}
              # node-version-file: '.nvmrc'

        - name: Install dependencies
            run: npm install

  cleanup:
    name: Cleanup actions
    needs:
      - deploy
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: "♻️ remove build artifacts"
        uses: geekyeggo/delete-artifact@v1
        with:
          name: production-files